#!/usr/bin/env bun

/**
 * Composio Authentication Test
 * Verify API key validity
 */

const API_KEY = 'dc30994b-fe42-495a-a346-809e8f95ee49';

async function testAuthentication() {
  console.log('=== COMPOSIO AUTHENTICATION TEST ===');
  console.log(`API Key: ${API_KEY.substring(0, 8)}...`);
  console.log('');

  // Test direct API call
  console.log('Testing direct API authentication...');
  
  try {
    const response = await fetch('https://backend.composio.dev/api/v1/apps', {
      method: 'GET',
      headers: {
        'X-API-Key': API_KEY,
        'Content-Type': 'application/json'
      }
    });

    console.log(`Response status: ${response.status}`);
    
    if (response.status === 200) {
      console.log('✅ API key is valid!');
      
      const data = await response.json();
      console.log(`\nFound ${data.items?.length || 0} available apps`);
      
      // Show Gmail and Calendar apps
      const googleApps = data.items?.filter((app: any) => 
        app.key === 'gmail' || app.key === 'googlecalendar'
      );
      
      if (googleApps && googleApps.length > 0) {
        console.log('\nGoogle integrations available:');
        googleApps.forEach((app: any) => {
          console.log(`  - ${app.name} (${app.key})`);
          console.log(`    Description: ${app.description}`);
        });
      }
      
      // Test entity endpoint
      console.log('\n\nTesting entity endpoint...');
      const entityResponse = await fetch('https://backend.composio.dev/api/v1/entity/default', {
        method: 'GET',
        headers: {
          'X-API-Key': API_KEY,
          'Content-Type': 'application/json'
        }
      });
      
      if (entityResponse.status === 200) {
        const entityData = await entityResponse.json();
        console.log('✅ Entity exists:', entityData.id);
      } else if (entityResponse.status === 404) {
        console.log('⚠️  Entity does not exist, creating...');
        
        const createResponse = await fetch('https://backend.composio.dev/api/v1/entity', {
          method: 'POST',
          headers: {
            'X-API-Key': API_KEY,
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            id: 'default',
            name: 'Default User'
          })
        });
        
        if (createResponse.status === 200 || createResponse.status === 201) {
          console.log('✅ Entity created successfully');
        } else {
          console.log(`❌ Failed to create entity: ${createResponse.status}`);
        }
      }
      
      // Check connected accounts
      console.log('\n\nChecking connected accounts...');
      const connectionsResponse = await fetch('https://backend.composio.dev/api/v1/connectedAccounts', {
        method: 'GET',
        headers: {
          'X-API-Key': API_KEY,
          'Content-Type': 'application/json'
        }
      });
      
      if (connectionsResponse.status === 200) {
        const connectionsData = await connectionsResponse.json();
        console.log(`Found ${connectionsData.items?.length || 0} connected accounts`);
        
        if (connectionsData.items && connectionsData.items.length > 0) {
          console.log('\nConnected accounts:');
          connectionsData.items.forEach((account: any) => {
            console.log(`  - ${account.appUniqueId || account.appName} (${account.status})`);
          });
        } else {
          console.log('\n⚠️  No accounts connected yet');
          console.log('\nTo connect Gmail and Calendar:');
          console.log('1. Visit https://app.composio.dev');
          console.log('2. Navigate to Integrations');
          console.log('3. Connect Gmail and Google Calendar');
          console.log('4. Or use the OAuth URLs generated by the SDK');
        }
      }
      
    } else if (response.status === 401) {
      console.log('❌ API key is invalid or expired');
      console.log('\nPlease verify:');
      console.log('1. The API key is correct');
      console.log('2. Your account at https://app.composio.dev is active');
    } else {
      console.log(`❌ Unexpected response: ${response.status}`);
      const text = await response.text();
      console.log(`Response: ${text.substring(0, 200)}`);
    }
    
  } catch (error: any) {
    console.error('❌ Failed to connect to Composio API');
    console.error(`Error: ${error.message}`);
    
    if (error.cause?.code === 'ECONNREFUSED') {
      console.log('\n⚠️  Cannot reach Composio servers');
      console.log('Please check your internet connection');
    }
  }
}

// Run the test
console.log('Testing Composio authentication...\n');
testAuthentication()
  .then(() => {
    console.log('\n✅ Authentication test complete');
  })
  .catch((error) => {
    console.error('Fatal error:', error);
    process.exit(1);
  });